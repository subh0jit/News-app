{"version":3,"sources":["assets/logo.svg","config/config.js","components/Layout/Searchbar.js","components/Layout/Spinner.js","components/Analytics/Chart.js","components/Layout/Sidenav.js","components/Layout/Pagination.js","containers/Search.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Searchbar","props","className","href","style","display","type","name","value","placeholder","onChange","change","required","onClick","event","preventDefault","marginTop","Spinner","justifyContent","alignItems","class","Chart","state","chartData","labels","datasets","label","data","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","this","options","title","text","legend","position","Component","Sidenav","id","to","loading","showPrevLink","showNextLink","handlePrevClick","handleNextClick","Search","newsRetrieved","tableHeader","query","message","cancel","totalResults","totalPages","currentPageNo","handleOnInputChange","e","target","console","log","setState","fetchedSearchResults","updatePageNo","pageNumber","axios","CancelToken","source","get","config","cancelToken","token","then","response","docs","total","meta","hits","totalPageCount","getPageCount","newsArray","headerArray","Object","keys","catch","err","isCancel","denominator","valueToBeAdded","Math","floor","handlePageClick","str","num","length","slice","map","news","index","key","_id","truncateString","moment","pub_date","calendar","abstract","headline","main","web_url","RetrievedData","renderTableHeader","renderTableData","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.0fcde199.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.6c645e7d.svg\";","const app_id = 'a2397777 - ba0a - 410a-9e23 - bb90a0eb3d57 ';\nconst app_key = 'bmtUl0F6u8RGaYgdvbnetkVNSYcj9Ox5';\nconst baseUrl = 'https://api.nytimes.com/svc/search/v2/articlesearch.json'\n\n\nexport default {\n  app_id,\n  app_key,\n  baseUrl\n}","import React from 'react';\n\n\nconst Searchbar = (props) => {\n  const handleClick = (event) => {\n    event.preventDefault();\n  }\n  return (\n\n    <div className=\"navbar-fixed\">\n      <nav className=\"light-blue lighten-1\">\n        < div className=\"nav-wrapper  nav-fixed \" >\n          <a href=\"#!\" className=\"brand-logo\">The Newyork Times</a>\n          <form className=\"right white\" style={{ display: \"flex\" }}>\n\n\n            <input type=\"text\"\n              name={props.name}\n              value={props.value}\n              placeholder=\"Search...\"\n              onChange={props.change}\n              required />\n            <button type=\"submit\" onClick={handleClick} className=\"btn blue\" style={{ marginTop: \"1.5%\" }}>Search</button>\n\n          </form>\n        </div >\n      </nav >\n\n    </div>\n\n  )\n}\n\nexport default Searchbar","import React from 'react';\n\n\nconst Spinner = () => {\n  return (<div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n    <button class=\"btn white circle\">\n      <div className=\"preloader-wrapper small active center\">\n        <div className=\"spinner-layer spinner-blue-only\">\n          <div className=\"circle-clipper left\">\n            <div className=\"circle\"></div>\n          </div><div className=\"gap-patch\">\n            <div className=\"circle\"></div>\n          </div><div className=\"circle-clipper right\">\n            <div className=\"circle\"></div>\n          </div>\n        </div>\n      </div>\n    </button>\n\n  </div>)\n}\n\n\nexport default Spinner;","import React, { Component } from 'react';\n\nimport { Bar, Line } from 'react-chartjs-2';\n// import { render } from '@testing-library/react';\n\n\nclass Chart extends Component {\n  state = {\n    chartData: {\n      labels: ['2011', '2012', '2013', '2014', '2015', '2016', '2017', '2018', '2019', '2020'],\n      datasets: [{\n        label: 'Article', data: [100, 200, 80, 300, 50, 400, 345, 341, 87, 780],\n        fill: false,\n        lineTension: 0.1,\n        backgroundColor: 'rgba(75,192,192,0.4)',\n        borderColor: 'rgba(75,192,192,1)',\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0.0,\n        borderJoinStyle: 'miter',\n        pointBorderColor: 'rgba(75,192,192,1)',\n        pointBackgroundColor: '#fff',\n        pointBorderWidth: 1,\n        pointHoverRadius: 5,\n        pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n        pointHoverBorderColor: 'rgba(220,220,220,1)',\n        pointHoverBorderWidth: 2,\n        pointRadius: 1,\n        pointHitRadius: 10,\n      }],\n\n\n    }\n  }\n\n\n  render() {\n    return (\n      <div class=\"card\">\n        <div className=\"chart\">\n          <Line data={this.state.chartData} options={{\n            title: {\n              display: true,\n              text: 'Number of Article Published Each Year'\n            }, legend: {\n              display: true,\n              position: 'right'\n            }\n          }} />\n        </div>\n      </div>\n    )\n  }\n}\n\n\nexport default Chart","import React from 'react';\nimport logo from '../../assets/logo.svg'\nimport { Link } from 'react-router-dom';\n\nconst Sidenav = () => {\n  return (\n    <div className=\"wrapper\">\n      <ul id=\"slide-out\" className=\"sidenav sidenav-fixed\" style={{ marginTop: \"5%\" }}>\n        <li><a href=\"#!\"><i className=\"material-icons\">assessment</i>Dashboard</a></li>\n        <li><div className=\"divider\"></div></li>\n        <li><a href=\"#!\"><i className=\"material-icons\">drafts</i>Articles</a></li>\n        {/* <li><Link to=\"/analytics\"><i className=\"material-icons\">drafts</i>Articles</Link></li> */}\n        <li><div className=\"divider\"></div></li>\n\n        <li><Link to=\"/analytics\"><i className=\"material-icons\">show_chart</i>Analytics</Link></li>\n        <li><div className=\"divider\"></div></li>\n        <li><a href=\"#!\"><i className=\"material-icons\">message</i>Message</a></li>\n        <li><div className=\"divider\"></div></li>\n        <li><a href=\"#!\"><i className=\"material-icons\">event</i>Calendar</a></li>\n        <li><div className=\"divider\"></div></li>\n      </ul>\n    </div>\n  )\n}\n\nexport default Sidenav;","import React from 'react';\nimport './Pagination.css';\nexport default (props) => {\n  const { loading,\n    showPrevLink,\n    showNextLink,\n    handlePrevClick,\n    handleNextClick } = props;\n  return (<div>\n    <a href=\"#\"\n      className={`${showPrevLink}?'show':'hide'`}\n      onClick={handlePrevClick}>\n      Prev\n        </a>\n    <a href=\"#\"\n      className={`${showNextLink}?'show':'hide'`}\n      onClick={handleNextClick}\n    >Next\n    </a>\n  </div>)\n}","import React, { Component } from 'react';\nimport config from '../config/config';\nimport axios from 'axios';\nimport Searchbar from '../components/Layout/Searchbar'\nimport Table from '../components/Layout/Table';\nimport Spinner from '../components/Layout/Spinner'\nimport Chart from '../components/Analytics/Chart';\nimport Sidenav from '../components/Layout/Sidenav';\nimport moment from 'moment';//This is for formatting the dates\nimport Pagination from '../components/Layout/Pagination';\nclass Search extends Component {\n  state = {\n    newsRetrieved: [],\n    loading: false,\n    tableHeader: [],\n    query: '',\n    message: '',\n    cancel: '',\n    totalResults: 0,\n    totalPages: 0,\n    currentPageNo: 0\n  }\n  //componentDidMount = () => {\n  // this.setState({\n  //   loading: true\n  // })\n  //Make the api call\n  // axios.get(`${config.baseUrl}?q=rainbow&page=2&api-key=${config.app_key}`).then(response => {\n  //   this.setState({\n  //     loading: false\n  //   })\n  //   console.log(response);\n  //   console.log(response.data.response.docs);\n  //   const newsArray = response.data.response.docs;\n  //   let headerArray = Object.keys(response.data.response.docs[0]);//This will return an array of all keys\n  //   this.setState({\n  //     newsRetrieved: newsArray,\n  //     tableHeader: headerArray\n  //   });\n\n  //   console.log(headerArray);\n\n\n  // }).catch(err => {\n  //   alert(err);\n  // })\n\n  //}\n  //Handle Input change\n  handleOnInputChange = (e) => {\n    const query = e.target.value;\n    console.log(query);\n    this.setState({\n      query,\n      loading: true,\n      message: ''\n    }, () => {\n      this.fetchedSearchResults(1, this.state.query);\n    });\n\n  }\n  fetchedSearchResults = (updatePageNo = '', query) => {\n    console.log(query);\n    const pageNumber = updatePageNo ? `&page=${updatePageNo}` : '';\n\n    //cancel the previous requests\n    if (this.state.cancel) {\n      this.state.cancel.cancel();\n    }\n    //otherwise create a new token and store it\n    this.setState({\n      cancel: axios.CancelToken.source()\n    })\n    this.setState({\n      loading: true\n    })\n    console.log(query);\n    axios.get(`${config.baseUrl}?q=${query}${pageNumber}&api-key=${config.app_key}`, {\n      cancelToken: this.state.cancel.token\n    }).then(response => {\n\n      console.log(response);\n      console.log(response.data.response.docs);\n      const total = response.data.response.meta.hits / 1000;\n      const totalPageCount = this.getPageCount(total, 10);\n      const newsArray = response.data.response.docs;\n      let headerArray = Object.keys(response.data.response.docs[0]);//This will return an array of all keys\n      this.setState({\n        loading: false,\n        newsRetrieved: newsArray,\n        tableHeader: headerArray,\n        totalResults: total,\n        totalPages: totalPageCount,\n        currentPageNo: updatePageNo\n      });\n\n      console.log(headerArray);\n\n\n    }).catch(err => {\n      // alert(err);\n\n      if (axios.isCancel(err) || err) {\n        this.setState({\n          loading: false,\n          message: 'Failed to fetch'\n        })\n      }\n\n    })\n\n  }\n\n  //count pages\n  getPageCount = (total, denominator) => {\n    const divisible = 0 === total % denominator;\n    const valueToBeAdded = divisible ? 0 : 1;\n    return Math.floor(total / denominator) + valueToBeAdded;\n  }\n\n  //handle Pagination\n  handlePageClick = (event, type) => {\n    event.preventDefault();\n    const updatePageNo = 'prev' === type ? this.state.currentPageNo - 1 : this.state.currentPageNo + 1\n    if (!this.state.loading) {\n      this.setState({ loading: false }, () => {\n        this.fetchedSearchResults(updatePageNo, this.state.query);\n      })\n    }\n  }\n\n\n  renderTableHeader() {\n    // return this.state.tableHeader.map((key, index) => {\n    //   return <th key={index}>{key.toUpperCase()}</th>\n    // })\n    return (<>\n      <th>Publishing date</th>\n      <th>Headline</th>\n      <th>Summary</th>\n      <th>URL</th>\n      <th>Source</th>\n    </>)\n  }\n  //Truncate the string\n  truncateString(str, num) {\n    if (str.length <= num) {\n      return str;\n    }\n    return str.slice(0, num) + '...'\n  }\n  renderTableData() {\n    return this.state.newsRetrieved.map((news, index) => {\n      return (\n        <tr key={news._id}>\n          <td>{this.truncateString(moment(news.pub_date).calendar(), 25)}</td>\n          <td title={news.abstract}>{this.truncateString(news.abstract, 20)}</td>\n          <td title={news.headline.main}>{this.truncateString(news.headline.main, 20)}</td>\n          <td title={news.web_url}><a href={news.web_url} target=\"_blank\">{this.truncateString(news.web_url, 20)}</a></td>\n          <td title={news.source}>{this.truncateString(news.source, 20)}</td>\n        </tr>\n      )\n    })\n  }\n  render() {\n\n    // let RetrievedData = this.state.newsRetrieved.map(news => {\n    //   return <Table key={news._id} summary={news.abstract} />\n\n    // })\n    let RetrievedData = (<table className=\"responsive-table striped\">\n      <tbody>\n        <tr>{this.renderTableHeader()}</tr>\n        {this.renderTableData()}\n      </tbody>\n    </table>);\n    if (this.state.loading) {\n      RetrievedData = <Spinner />;\n    }\n    const { query, loading, message, currentPageNo, totalPages } = this.state;//destructuring\n    const showPrevLink = 1 < currentPageNo;\n    const showNextLink = totalPages > currentPageNo;\n\n    return (<>\n      <Searchbar change={this.handleOnInputChange} value={query} name=\"query\" />\n      <div className=\"row\">\n        <div className=\"col s3\"><Sidenav /></div>\n        <div className=\"col s9\">\n          <div className=\"card\">\n            <div className=\"card-content\">\n              <div className=\"card-title\">\n                <span>ARTICLES</span>\n              </div>\n              {RetrievedData}\n            </div>\n            <div className=\"card-action\">Pagination\n            <Pagination\n                loading={loading}\n                showPrevLink={showPrevLink}\n                showNextLink={showNextLink}\n                handlePrevClick={(event) => this.handlePageClick(event, 'prev')}\n                handleNextClick={(event) => this.handlePageClick(event, 'next')} />\n            </div>\n          </div>\n        </div>\n\n\n      </div>\n      <div className=\"row\">\n        <div className=\"col s9 offset-s3\">\n          <Chart />\n        </div>\n      </div>\n    </>)\n  }\n}\n\n\n\nexport default Search;","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Search from './containers/Search'\nimport Chart from './components/Analytics/Chart';\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n\n        <Search />\n        <Switch>\n          <Route exact path=\"/analytics\" component={Chart} />\n        </Switch>\n\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}